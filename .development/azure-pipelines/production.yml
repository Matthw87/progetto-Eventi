# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  phpVersion: 8.1
  remoteServer: 'production'
  envFile: 'env.production'
  deployPath: 'deploy'
  deployDestination: 'public_html'
  phppath: '/opt/cpanel/ea-php81/root/usr/bin/php'

steps:
- script: |
    sudo update-alternatives --list php
    sudo update-alternatives --set php /usr/bin/php$(phpVersion)
    sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
    sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
    sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
    sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
    php -version
  displayName: 'Use PHP version $(phpVersion)'
- script: |
    composer install --no-interaction --prefer-dist
    rm -r -f .git
  displayName: 'composer install'
- task: ArchiveFiles@2
  displayName: 'Comprimo i files'
  inputs:
    rootFolderOrFile: '.'
    includeRootFolder: false
    archiveType: 'tar'
    tarCompression: 'none'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).tar'
    replaceExistingArchive: true
- task: CopyFilesOverSSH@0
  displayName: 'Sposto i files sul server remoto'
  inputs:
    sshEndpoint: $(remoteServer)
    sourceFolder: '$(Build.ArtifactStagingDirectory)'
    contents: '$(Build.BuildId).tar'
    targetFolder: '$(deployPath)'
    readyTimeout: '20000'
- task: SSH@0
  displayName: 'Scompatto i files'
  inputs:
    sshEndpoint: $(remoteServer)
    runOptions: 'inline'
    inline: |
      mkdir $(deployPath)/$(Build.BuildId)
      tar -xvf $(deployPath)/$(Build.BuildId).tar -C $(deployPath)/$(Build.BuildId)
      rm -f $(deployPath)/$(Build.BuildId).tar
    readyTimeout: '20000'
- task: SSH@0
  displayName: 'Effettuo il deploy'
  inputs:
    sshEndpoint: $(remoteServer)
    runOptions: 'inline'
    inline: |
      rm -r -f $(deployPath)/$(Build.BuildId)/.git
      cp -r  $(deployPath)/$(Build.BuildId)/* $(deployDestination)/
      mv $(deployDestination)/$(envFile) $(deployDestination)/.env
      cp $(deployPath)/$(Build.BuildId)/.htaccess $(deployDestination)/.htaccess
      rm -r -f $(deployPath)/$(Build.BuildId)
      cd $(deployDestination) && $(phppath) bin/console.php migrate && $(phppath) bin/console.php setup --skip-errors && $(phppath) bin/console.php upgrade
    readyTimeout: '20000'
